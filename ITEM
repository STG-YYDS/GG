return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bi,bi)local bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=113,38,32,62,65,84,25,83,14,41,51,57,53,77,33,45,20,83,32,29,54,39,37,19,38,27,46,59,19,64,26,42,46,82,86,93,94,79,29,27,92,61,50,18,35,71,31,40,95,99,99,34 while bi~=67 do if bj>=650 then if bj>=994 then if bj<=1134 then if bj<=1040 then if bj>998 then bj=1057 cr=function()local cx,cy,cz,da,db,dc,dd,de=84,40,87,12,45,72,80,62,62,10,96,61,57,28,91,89,92,42 while cx~=40 do if cy<=183 then if cy<=75 then if cy<70 then cz,da,db,dc,dd,de=nil cy=75 else cy=120 de=ch()end else if cy>=165 then if cy<181 then do if((de==0 and dc==0))then return 0 end end cy=183 else cz=((-1)^bl(31,dc,1))cy=224 end else dc=ch()cy=165 end end else if cy<=280 then if cy<=224 then cy=264 do da=bl(20,dc,11)end else if cy<274 then cy=280 do dd=(bl(0,dc,20)*4294967296+de)end else cy=324 do db=1 end end end else if cy<=324 then cy=363 if not(da~=0)then if 0~=dd then do da=1 end db=0 else return(cz*0)end elseif not(da==2047)then else if 0==dd then do do return(cz*(0/0))end end else return(cz*(1/0))end end else if cy<375 then cy=379 return(cz*(2^(da-g))*(dd/cg+db))else cx=40;end end end end end end else bz=function()local g,cx cx,g=by(br,co,(co+j))co=(co+2);return((g*256)+cx);end bj=1040 end else if bj>=1097 then if bj>1102 then cb={}bj=1181 else bj=1134 do bk=function(...)return{...},bq(z,...)end end end else bj=1097 ce=function(g,g,g)local g,j,z,cx=52,33,23,55,37,97,70,90,66,86,39,84,99,53 while g~=38 do if j>=140 then if j<=140 then j=177 do co=(co+cx);end else if j<216 then j=219 return z;else g=38;end end else if j>=52 then if j<82 then cx=ch()j=91 else j=140 z=br:sub(co,(co+cx-1))end else j=52 z,cx=nil end end end end end end else if bj<=1226 then if bj>=1208 then if bj<1220 then bj=1226 cw={}else bj=1270 do cs={}end end else cv=function(g,j,j)local j,z,cx,cy,cz,da,db,dc=59,66,44,54,41,25,44,15,49,38,71,38,61,34,64,23,44,74,85,61,15,24,23,15,37 while j~=49 do if z<=280 then if z>=189 then if z<=238 then if z>196 then for j=(#cb+1),(#cb+cy)do local dd,de,df,dg,dh=77,27,12,62,91,97,95,11,51,97,77,57,14,61,89,33,32,64,30,63,80,29,17 while dd~=42 do if de>=303 then if de<=399 then if de>=369 then if de<394 then de=399 dh[78]=bo(df,21,29);else de=433 dh[110]=bo(dg,12,33);end else if de>305 then dh[148]=bo(df,12,20);de=369 else de=324 dh[57]=bo(df,3,m);end end else if de>=499 then if de<535 then de=537 cb[j]=dh;else dd=42;end else if de>441 then do dh[50]=-dh[78]end de=499 else de=467 dh[87]=-dh[57]end end end else if de>=155 then if de<=202 then if de>162 then de=218 do dh[102]=ci();end else dg=ch()de=202 end else if de>222 then de=303 dh[171]=bo(dg,1,u);else de=266 dh[129]=bo(df,1,2);end end else if de<=57 then if de>34 then de=87 dh={}else de=57 df,dg,dh=nil end else if de>90 then de=155 do df=ch()end else dh[56]=ci();de=116 end end end end end end z=253 else do cy=ch()end z=238 end else if z>261 then z=313 do cz=ch()end else z=280 do dc[118]=ci();end end end else if z<=100 then if z<97 then z=100 cx,cy,cz,da,db,dc=nil else db={}z=134 end else if z>140 then dc={}z=189 else do cx={}end z=161 end end end else if z>=440 then if z<=460 then if z>447 then z=483 for j=1,ch()do cx[j-1]=cv();end else z=460 dc[136]=db;end else if z>=516 then if z<525 then z=532 return dc;else break end else z=516 dc[19]=cx;end end else if z<=357 then if z<351 then da={}z=357 else for j=1,cz do local m,u,cx,cy=60,43,77,87,57,45,77,40,53,73,68,67 while m~=40 do if u<=100 then if u<=43 then cx,cy=nil u=69 else if u<93 then cy=ci()u=100 else cx=nil u=121 end end else if u>=136 then if u<152 then u=159 da[j]=cx;else m=40;end else u=136 if(2==cy)then cx=(0~=ci());elseif(not(cy~=1))then cx=cr();elseif(0==cy)then cx=ce();elseif(not(cy~=4))then cx=g[ce()];end;end end end end z=376 end else if z>385 then do for g=1,ch()do local j,m,u,cx,cy,cz=75,66,40,50,97,45,34,59,53,10,74,48,21,94,15,74,56,36,95,87,41,13,25,71,48,93 while j~=52 do if m>=334 then if m<=440 then if m>=402 then if m>408 then m=486 cy[78]=bo(cx,21,29);else m=440 cy[110]=bo(cz,12,33);end else if m>338 then do cy[57]=bo(cx,3,11);end m=402 else m=354 cy[171]=bo(cz,1,11);end end else if m<=501 then if m<492 then cy[102]=bo(cx,bc,20);m=501 else cy[87]=-cy[57]m=543 end else if m>=571 then if m<589 then m=597 db[g]=cy;else j=52;end else m=571 do cy[50]=-cy[78]end end end end else if m<=152 then if m<=82 then if m<75 then u,cx,cy,cz=nil m=82 else m=128 cy={{},nil,nil,nil,nil}end else if m<148 then cy[56]=ci();m=152 else do cy[98]={};end m=182 end end else if m<=229 then if m>187 then cx=ch()m=251 else if not(ci()~=1)then do for g=1,ci()do do cy[98][g]={ci()==0,ch()}end end end end m=229 end else if m>=290 then if m<307 then do u=bo(cx,1,2)end m=314 else m=334 do cy[129]=u end end else cz=ch()m=290 end end end end end end end z=440 else do dc[153]=da end z=424 end end end end end end bj=1208 end else if bj>=1298 then if bj>1307 then bi=67;else bj=1333 return cp(cv(bw()),{},bw())();end else cp=function(g,j,m,u,u)local u,z,bc,bi,cx do bc=g[19]end z=cw u=g[153]cx=g[136]bi=g[118]return function(...)local g,z,cy,cz,da,db,dc,dd,de z=1 do dd=-1 end de=-1 da={}db={...}do cy=(bq('#',...)-1)end do dc={}end g={}do for de=0,cy do if(not(de<bi))then da[(de-bi)]=db[(de+1)];else g[de]=db[(de+1)];end;end;end cz=(cy-bi+o)while true do local o,cz,de,df,dg,dh,di,dj,dk,dl do dj=cx[z]end di=dj[171]df=dj[56]cz=dj[57]do de=dj[148]end dl=dj[78]o=dj[102]dk=dj[87]dh=dj[110]dg=dj[50]if not(di>47)then if not(di>23)then if not(di>11)then do if not(di<6)then if not(di<9)then do if not(di<10)then if 10==di then if(not(g[cz]==g[dl]))then do z=dh;end end;else g[dj[dj[57]]]=g end else do if(u[dl]==g[cz])then z=dh;end;end end end else do if not(di<7)then if(dj[171]<8)then do g[dj[57]]=(g[dh]-g[dj[78]]);end else g[cz]=(g[dh]%u[dl]);end else do cw=g end end end end else if not(di<3)then if not(dj[171]>3)then local df do df=cz end g[df]=g[df]();else if(di>4)then if(u[dl]~=g[cz])then z=dh;end;else local df df=cz g[df](bv(g,(df+1),dj[110]))end end else if not(di>l)then g[dj[57]]=(not g[dj[110]]);else do if(di>p)then cx[z]=cb[o];z=dh;else if((g[cz]<g[dl]))then z=dh;end;end end end end end end else if not(di>17)then if not(di<15)then if not(di>15)then do if((g[cz]>g[dl]))then z=dh;end;end else if not(di~=16)then local l,p do p=cz end l={}if(#dc>0)then for df=1,#dc do local dm dm=dc[df]for df=0,#dm do local dn,_do,dp do dp=dm[df]end dn=dp[1]_do=dp[2]do if(dn==g and _do>=bb)then do l[_do]=dn[_do]end do dp[1]=l end end end end end end return g[p],g[(p+1)]else local l,p l=dj[110]p=g[l]for bb=(l+1),dl do p=(p..g[bb]);end;g[dj[57]]=p;end end else if not(di>12)then local l,p,bb,df df=cz do p,bb=bk(g[df](bv(g,(df+1),dh)))end dd=(bb+df-1)l=0 for bb=df,dd do do l=(l+1);end g[bb]=p[l];end;else do if not(dj[171]~=13)then do return g[cz]();end;else local l,p,bb p=cz bb=g[p]l=g[(p+2)]if((l>0))then if((bb>g[p+1]))then z=dh;else g[(p+3)]=bb;end elseif((bb<g[p+e]))then z=dh;else do g[(p+q)]=bb;end end end end end end else if not(di>20)then if not(dj[171]<19)then if(di<20)then local e e=cz g[e]=g[e](g[e+k]);else g[cz]=m[u[dh]];end else cw[cz]=g[de]end else if not(di<22)then if(di>22)then g[cz]=m[u[dj[110]]][u[dl]];else end else if not g[cz]then z=dj[110];end;end end end end else if not(dj[171]>35)then if not(di<30)then do if not(di<33)then if not(di<34)then if 34==di then else dd=dj[cz];end else cx[z]=cb[o];z=dh;end else if not(di>30)then local e,k,l l=cz k=g[(l+2)]e=(g[l]+k)g[l]=e;if((k>0))then do if(not(e>g[l+1]))then z=dh;g[(l+3)]=e;end end elseif(not(e<g[l+1]))then z=dh;do g[(l+3)]=e;end end else if not(di~=31)then g[cz]=(g[dj[110]]/u[dl]);else local e,k k=cz e={}if(#dc>0)then for l=1,#dc do local p p=dc[l]do for l=0,#p do local q,bb,df bb=p[l]df=bb[1]q=bb[2]if(df==g and q>=0)then e[q]=df[q]bb[1]=e end end end end end return bv(g,k,dd);end end end end else do if not(di>26)then if not(di>24)then g[cz]=(g[dh]+g[dl]);else if(di<26)then do g[cz]=(g[dh]/g[dl]);end else do g[cz]=g[dj[110]][g[dj[78]]];end end end else do if not(di<28)then do if(di<29)then do cw[cz]()end else g[cz]=j[dh];end end else local e e=cz g[e]=g[e](bv(g,e+1,dd));end end end end end else if not(di<42)then if not(di<45)then do if not(di>45)then do g[cz]=cw[de]end else if not(di~=46)then local e e=cz do return g[e](bv(g,(e+1),dh))end;else g[dj[57]]=(g[dh]+u[dl]);end end end else if not(di>42)then local e e={}if(#dc>0)then for k=1,#dc do local l l=dc[k]for k=0,#l do local p,q,bb q=l[k]bb=q[1]p=q[2]do if(bb==g and p>=0)then e[p]=bb[p]q[1]=e end end end end end return g[(cz+2)];else do if not(dj[bd]~=43)then local e,k e=cz k={}for l=1,#dc do local p p=dc[l]for l=0,#p do local q,bb,bd q=p[l]bb=q[1]bd=q[2]do if(bb==g and bd>=e)then k[bd]=bb[bd];q[1]=k;end;end end;end;else if cz then dj[57]=false;dl=dh;do z=(z-1);end else z=(z+dh+dj[78]);end end end end end else if not(di>38)then if not(dj[171]>36)then g[dg]=(function()g[cz]=cp(bc[dj[148]],nil,m);end)else if not(di~=37)then if g[dj[57]]then z=dh;end;else local e,k k,e=bk(...)for e=1,cz do g[(e-1)]=k[e]end end end else if not(di<40)then if(dj[171]>w)then g[cz]=#g[dj[x]];else g[cz]=-g[dh];end else if(not(g[cz]<g[dl]))then do z=dh;end end;end end end end end else if not(di<72)then if not(di<84)then if not(di<90)then do if not(di<93)then if not(di<94)then if(di<95)then local e,k,l k=dj[57]l={g[k](bv(g,k+1,dh))}do e=0 end do for p=k,dj[78]do do e=(e+1);end g[p]=l[e];end end else local e,k e=cz k=g[dj[110]]do g[(e+1)]=k;end g[e]=k[u[dl]];end else g[cz][g[dh]]=g[dl];end else if not(di<91)then if(dj[171]<92)then if((u[dj[57]]<g[dj[78]]))then z=dh;end;else g[cz]=(g[dj[110]]^g[dl]);end else end end end else if not(di>86)then if not(di>84)then cw[cz]={}else if(di<86)then m[u[dh]]=g[dj[57]];else local e e=cz do return bv(g,e,(e+dh))end;end end else do if not(di>87)then m=g[dj[dj[57]]]else if not(di~=88)then local e e=cz do g[e]=g[e](bv(g,e+1,dh));end else j[dh]=g[dj[57]];end end end end end else if not(di>77)then if not(di<75)then if not(dj[171]<76)then if(dj[171]>76)then do return g[dk][o]end else local e e=cz g[e](g[(e+1)])end else g[cz][u[dj[110]]]=u[dj[78]];end else if not(dj[171]>72)then g[dg]();else if(di<74)then local e,j,k do e=cz end k={g[e](g[e+v])}j=0 for l=e,dl do j=(j+t);do g[l]=k[j];end end else g[dj[57]]=nil;end end end else if not(di<81)then if not(di<f)then if(di<83)then g[cz]=(g[dh]*u[dl]);else local e,f,j f=cz j=g[f]e=dj[110]for k=1,e do j[k]=g[(f+k)]end;end else z=dj[110];end else do if not(di<79)then if 79==di then cw[cz]=cw[de]else g[cz]=g[dj[110]][u[dl]];end else g[dj[57]]=(g[dh]%g[dj[78]]);end end end end end else if not(dj[171]>59)then do if not(di>53)then if not(di>50)then do if not(di>48)then local e,f,j,k do j=cz end k=((dj[78]-1)*50)e=g[j]f=dh do for l=1,f do do e[(k+l)]=g[(j+l)]end end;end else if(di<50)then local e e=g[dk][dj[102]]g[dk][o]=(e..g[dl]);else do g[dj[57]]=(not(dh==0));end do z=(z+1);end end end end else do if not(dj[171]>51)then cx[z]={[102]=0,[110]=15,[78]=77,[57]=6,[171]=di- -10};z=(z-1);else if(di<53)then local e,f e=cz f=dj[110]for j=e,f do g[j]=da[(j-e)];end;else g[cz]=(g[dh]*g[dl]);end end end end else if not(di<57)then if not(di>57)then do while not g[dl]do g[cz]=g[dj[78]];z=dh;break end end else if 58==di then for e=cz,dh do g[e]=nil;end;else z=((u[cz]<g[dl])and dh or z)end end else if not(di>54)then local e,f f=cz e=g[dh]g[(f+1)]=e;g[f]=e[g[dl]];else if(di>55)then while((g[cz]<u[dl]))do z=dh;break end else do z=((g[cz]<g[dj[78]])and dh or z)end end end end end end else if not(di<66)then if not(di<69)then if not(di<70)then if(di<71)then do u=cw[cz](u)end else g={};for e=0,cy do if(e<bi)then g[e]=db[(e+d)];else break end;end;end else g[cz]={};end else if not(di<67)then if(di>67)then do g[cz]=cp(bc[dh],nil,m);end else g[cz]=cw[de]end else g[dj[50]]=(function()g[cz]=cp(bc[de],nil,m);end)end end else if not(di>62)then if not(di<61)then if(di<62)then do g[dj[57]]=u[dh]end else do do return g[cz]end end end else z=((u[cz]<u[dl])and dh or z)end else do if not(di<64)then if(dj[171]>64)then g[cz]=g[dh];else local d,e,f,j,k do f=cz end k=dl j=(f+2)d={g[f](g[f+1],g[j])}for l=1,k do g[(j+l)]=d[l]end do e=g[(f+bh)]end if e then g[j]=e else z=dh;end;end else g[cz]=g[dh]end end end end end end end z=(z+1);end;end;end bj=1298 end end end else if bj<=772 then if bj>=713 then if bj>=750 then if bj>758 then for d=1,31 do do bu[d]=cl end cl=(cl*2)end bj=790 else cl=2 bj=772 end else bj=750 bu={[0]=1}end else if bj<689 then do bt=''end bj=698 else bj=713 cg=(2^52)end end else if bj>=879 then if bj<=879 then co=be bj=923 else if bj<963 then bj=965 ch=function()local d,e,f,g f,e,d,g=by(br,co,(co+3))do co=(co+4);end return((g*16777216)+(d*65536)+(e*256)+f);end else bj=994 do ci=function()local d d=by(br,co,co)co=(co+1);return d;end end end end else if bj<=790 then bl=function(d,e,f,g)local g,j,k=47,44,32,97,28,74,67,42,46,87,60,14 while g~=37 do if j>=164 then if j<=164 then j=206 do k=(k-k%1)end else if j<246 then j=248 do return k end else g=37;end end else if j>=93 then if j>95 then j=164 k=((e/bu[d])%bu[f])else j=126 k=nil end else j=93 k=nil end end end end bj=819 else if bj<834 then bj=839 cd=(bit_lib and bit_lib.bxor or function(d,e)d=d%(2^32)e=e%(2^32)local f,g=0,1 while d>0 and e>0 do local j,k=d%16,e%16 f=f+ca[j+1][k+1]*g d=(d-j)/16 e=(e-k)/16 g=g*16 end f=f+d*g+e*g return f end)else bj=879 bo=function(d,e,f,g)local g do g=((d/2^(e-1))%2^((f-1)-(e-1)+1))end return(g-g%1);end end end end end end else if bj>=350 then if bj<=470 then if bj>=417 then if bj>=455 then if bj<461 then bs=math.abs bj=470 else do cj=math.floor end bj=485 end else bn=(function(d,e,e,e)if not(cn(d)~='number')then return true else do return false end end end)bj=455 end else if bj<366 then bq=select bj=375 else cn=type bj=417 end end else if bj<=545 then if bj>=505 then if bj<536 then cu=tonumber bj=545 else bj=591 cc={}end else bj=505 do bv=(unpack or table.unpack)end end else if bj>=609 then if bj<620 then bj=628 br=cffunction(d,e,e)return cc[cu(d,16)]end)else ca={{0,1,2,3,4,5,6,7,8,y,10,11,12,13,c,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,r,11,8,9,14,15,12,13,},{3,2,1,h,ba,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,bg,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{n,6,5,4,3,2,1,0,15,14,13,12,s,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,i,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,b,12,13,2,3,0,1,6,7,4,5,},{11,a,9,8,15,14,13,12,3,2,bf,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}bj=650 end else for a=0,255 do cc[a]=bp(a);end bj=609 end end end else if bj<=140 then if bj<=58 then if bj<54 then bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=nil bj=58 else by=string.byte bj=89 end else if bj<=89 then bj=114 do bp=string.char end else if bj>116 then cf=string.gsub bj=169 else bj=140 cq=string.sub end end end else if bj>=262 then if bj<=262 then ct=math.ldexp bj=286 else if bj<316 then bj=321 bw=(getfenv or function()return _ENV end)else bj=350 bx=setmetatable end end else if bj>=198 then if bj>205 then ck=table.insert bj=262 else bj=232 do cm=table.concat end end else bj=198 bm=string.rep end end end end end end end)(10,15,14,1,1,82,1023,0,10,2,1,0,11,7,1,1,3,10,11,1,11,1,40,110,9,'#',7,0,12,171,1,1,14,3)
